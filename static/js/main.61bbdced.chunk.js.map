{"version":3,"sources":["store/album-slice.js","App.js","reportWebVitals.js","store/store-data.js","index.js"],"names":["createAlbum","createAsyncThunk","_","thunkAPI","callAlbum","a","axios","get","then","res","data","albumData","photoData","forEach","adata","aindex","combineData","push","count","i","length","albumId","randomNumber","Math","floor","random","number","photoCopy","sample","j","combineData2","slice","createSlice","name","initialState","entities","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","actions","storeByPayload","App","dispatch","useDispatch","useState","storeData","setStoreData","copyData","useSelector","album","useEffect","unwrapResult","className","TextField","placeholder","fullWidth","onChange","e","filAll","value","target","console","log","index","filterData","filter","pdata","title","includes","map","dindex","pindex","color","src","thumbnailUrl","href","url","style","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","albumreducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.61bbdced.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from \"axios\";\r\n\r\nexport const createAlbum = createAsyncThunk(\r\n  'album/craeteAlbum',\r\n  async (_, thunkAPI) => {\r\n  \r\n\r\n    let albumData;\r\n    let photoData;\r\n    let combineData = [];\r\n    let photoCopy = [];\r\n    let combineData2 = [];\r\n    \r\n  \r\n    async function callAlbum(){\r\n      albumData = await axios.get(\"https://jsonplaceholder.typicode.com/albums\").then((res)=>res.data)\r\n    \r\n    photoData = await axios.get(\"https://jsonplaceholder.typicode.com/photos\").then((res)=>res.data)\r\n     \r\n      \r\n      albumData.forEach((adata,aindex) => { \r\n        if(aindex<5) {\r\n         combineData.push(adata);\r\n        }\r\n       })\r\n      //  console.log(combineData)\r\n      let count = 0;\r\n    for(let i=0; i<photoData.length; i++) {\r\n      \r\n      if(photoData[i].albumId<6) {\r\n  \r\n        let randomNumber = Math.floor(Math.random()*(250 - 50 + 1) ) + 50;\r\n        photoData[i].number = randomNumber\r\n       photoCopy.push(photoData[i])\r\n        count = count+1;\r\n        \r\n        if(count >=10){\r\n          i= i+40;\r\n          count = 0;\r\n        }\r\n        }\r\n      }\r\n\r\n     \r\n   \r\n  for (let i=0; i<combineData.length;i++) {\r\n    let sample=[]\r\n   \r\n    let count = 0;\r\n    for(  let j=0; j<photoCopy.length; j++){\r\n      \r\n      sample.push(photoCopy[j])\r\n      count= count+1;\r\n      if(count>=10){\r\n        \r\n      \r\n        combineData2.push([combineData[i],sample])\r\n  count = 0;\r\n  sample = [];\r\n  i = i+1;\r\n      }\r\n      // console.log(photoCopy[j],j);\r\n    }\r\n    \r\n    // combineData2.push([combineData[i],sample[j]])\r\n  }\r\n  // console.log(combineData2,\"com2\");\r\n   return combineData2\r\n  }\r\n    \r\n\r\n    return callAlbum();\r\n  }\r\n)\r\n\r\nexport const slice = createSlice({\r\n    name: 'album',\r\n    initialState: {\r\n      entities: [],\r\n    },\r\n    reducers: { },\r\n    extraReducers: (builder) => {\r\n      builder.addCase(createAlbum.fulfilled, (state, action) => {\r\n        \r\n        state.entities.push(...action.payload)\r\n      })\r\n    }\r\n  }\r\n);\r\n  \r\n  export const { storeByPayload } = slice.actions;\r\n\r\n  // export const selectCount = state => state.counter.value;\r\n\r\n  export default slice.reducer; ","import \"./App.css\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createAlbum } from \"./store/album-slice.js\";\n\nimport { unwrapResult } from \"@reduxjs/toolkit\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [storeData, setStoreData] = useState('');\n  let copyData = useSelector((data)=>data.album[\"entities\"])\n  \n\n  \n\n  function searchData(e) {\n    \n    \n  \n    let filAll = []\n    let value = e.target.value;\n    console.log(value.length,\"value\")\n    copyData.forEach((data,index) => {\n     let filterData =   data[1].filter((pdata) => {\n       \n      // console.log(pdata.title)\n      return pdata.title.includes(value);\n        \n      });\n      if(filterData.length ){\n        console.log(filterData);\n      filAll.push([data[0],filterData])\n      }\n    });\n  if(value.length)\n     setStoreData(filAll)\n     else\n     setStoreData(copyData)\n\n\n  }\n\n  useEffect(() => {\n    dispatch(createAlbum())\n      .then(unwrapResult)\n      .then((res) => setStoreData(res));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <TextField\n        placeholder=\"enter some data shivaraj\"\n        fullWidth\n        onChange={searchData}\n      />\n      {storeData.length\n        ? storeData.map((data, dindex) => {\n            return (<div key={dindex} className=\"main\">\n              <h2>{data[0].title}</h2>\n              \n                {data[1].map((pdata,pindex) => {\n                  let color = pdata.number>75 ? \"green\" : \"red\";\n\n                  // console.log(pdata.thumbnailUrl);\n                  return(<div className=\"elem\" key={pindex}> <img className=\"thum\" key={pindex} src={pdata.thumbnailUrl}/>\n                <div className=\"mid\">\n                  <h4>{pdata.title}</h4>\n                  <a href={pdata.url} target=\"_blank\">{pdata.url}</a>\n                  </div>\n                  <div className=\"ptime\">\n                    <p style={{color:color}}>$    {pdata.number}</p>\n                    <p>10:00 AM</p>\n                  </div>\n                </div>\n                  )\n                })}\n             \n\n            </div>)\n          })\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport albumreducer from \"./album-slice\"\r\n\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        album: albumreducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store-data.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}